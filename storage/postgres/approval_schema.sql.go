// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: approval_schema.sql

package postgres

import (
	"context"
)

const getApprovalSchemaById = `-- name: GetApprovalSchemaById :one
SELECT id, name, description, status_context, status_title FROM approval_schema WHERE id = $1
`

func (q *Queries) GetApprovalSchemaById(ctx context.Context, id int32) (ApprovalSchema, error) {
	row := q.db.QueryRow(ctx, getApprovalSchemaById, id)
	var i ApprovalSchema
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.StatusContext,
		&i.StatusTitle,
	)
	return i, err
}

const getDefaultApprovalSchema = `-- name: GetDefaultApprovalSchema :one
SELECT id, name, description, status_context, status_title FROM approval_schema 
WHERE id = (SELECT schema_id FROM default_approval_schema LIMIT 1)
`

func (q *Queries) GetDefaultApprovalSchema(ctx context.Context) (ApprovalSchema, error) {
	row := q.db.QueryRow(ctx, getDefaultApprovalSchema)
	var i ApprovalSchema
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.StatusContext,
		&i.StatusTitle,
	)
	return i, err
}
