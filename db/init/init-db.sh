#!/bin/bash
set -e

APP_DB="pr_compliance"
APP_MIG_USER_NAME="pr_compliance_migrations"
APP_MIG_USER_PASS="pr_compliance_migrations"
APP_API_USER_NAME="pr_compliance_api"
APP_API_USER_PASS="pr_compliance_api"
SCHEMA_NAME="development"

# Create the database and users

psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
  CREATE DATABASE pr_compliance;

  CREATE USER $APP_API_USER_NAME WITH ENCRYPTED PASSWORD '$APP_API_USER_PASS';
  GRANT CONNECT ON DATABASE $APP_DB TO $APP_API_USER_NAME;

  CREATE USER $APP_MIG_USER_NAME WITH ENCRYPTED PASSWORD '$APP_MIG_USER_PASS';
  GRANT CONNECT, CREATE, TEMPORARY ON DATABASE $APP_DB TO $APP_MIG_USER_NAME;
EOSQL

# Create the schema

psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$APP_DB" <<-EOSQL
  CREATE SCHEMA $SCHEMA_NAME;

  GRANT USAGE ON SCHEMA $SCHEMA_NAME TO $APP_API_USER_NAME;
  GRANT USAGE, CREATE ON SCHEMA $SCHEMA_NAME TO $APP_MIG_USER_NAME;

  ALTER ROLE $APP_API_USER_NAME SET search_path TO $SCHEMA_NAME,public;
  ALTER ROLE $APP_MIG_USER_NAME SET search_path TO $SCHEMA_NAME,public;
EOSQL

# Grant user privileges

export PGPASSWORD="$APP_MIG_USER_PASS" # avoids password prompt

psql -v ON_ERROR_STOP=1 --username "$APP_MIG_USER_NAME" --dbname "$APP_DB" <<-EOSQL
  ALTER DEFAULT PRIVILEGES IN SCHEMA $SCHEMA_NAME GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO $APP_API_USER_NAME;
  ALTER DEFAULT PRIVILEGES IN SCHEMA $SCHEMA_NAME GRANT ALL PRIVILEGES ON TABLES TO $APP_MIG_USER_NAME; 

  ALTER DEFAULT PRIVILEGES IN SCHEMA $SCHEMA_NAME GRANT USAGE ON SEQUENCES TO $APP_API_USER_NAME;
  ALTER DEFAULT PRIVILEGES IN SCHEMA $SCHEMA_NAME GRANT ALL PRIVILEGES ON SEQUENCES TO $APP_MIG_USER_NAME;
EOSQL
